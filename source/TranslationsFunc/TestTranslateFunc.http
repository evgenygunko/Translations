#@service=azure
@service=openai

### Translate "såsom" from Danish to English + Russian

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "SourceLanguage": "da",
  "DestinationLanguages": [
    "ru",
    "en"
  ],
  "Word": "såsom",
  "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
  "PartOfSpeech": "konjunktion"
}

> {%

  // Assert status code
  client.test('When sending a word for translation, we expect to get json back', () => {
    client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.Translations[0]["Language"] === "ru");
    client.assert(response.body.Translations[0]["TranslationVariants"].length > 0);
    client.assert(response.body.Translations[1]["Language"] === "en");
    client.assert(response.body.Translations[1]["TranslationVariants"].length > 0);
  });
%}

### Translate "såsom" from Danish to English + Russian

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
    "Version": "1",
    "SourceLanguage": "da",
    "DestinationLanguages": [
        "ru",
        "en"
    ],
    "Headword": {
        "Text": "såsom",
        "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
        "PartOfSpeech": "konjunktion",
        "Examples": [
            "Festdragterne blev anvendt til større fester, såsom konfirmationer, bryllupper og dans omkring majstangen"
        ]
    },
    "Meanings": [
        {
            "id": 1,
            "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
            "Examples": [
                "Festdragterne blev anvendt til større fester, såsom konfirmationer, bryllupper og dans omkring majstangen"
            ]
        },
        {
            "id": 2,
            "Meaning": "bruges som indledning til en ledsætning der angiver en begrundelse",
            "Examples": [
                "han .. var sit firmas dygtigste sælger, såsom han flere år i træk havde præsteret de flotteste salgstal"
            ]
        }
    ]
}

> {%

  // Assert status code
  client.test('When sending a word for translation, we expect to get json back', () => {
    client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.Translations[0]["Language"] === "ru");
    client.assert(response.body.Translations[0]["TranslationVariants"].length > 0);
    client.assert(response.body.Translations[1]["Language"] === "en");
    client.assert(response.body.Translations[1]["TranslationVariants"].length > 0);
  });
%}

### Translate "støbe" from Danish to English + Russian

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "SourceLanguage": "da",
  "DestinationLanguages": [
    "ru",
    "en"
  ],
  "Word": "støbe",
  "Meaning": "fremstille en genstand ved at lade en flydende masse størkne eller stivne til en bestemt form, ofte i en tildannet støbeform",
  "PartOfSpeech": "verbum",
  "Examples": [
      "kemikalierne, især tungmetaller, skal støbes ind i beton",
      "I denne del af verden er vores moral støbt sammen af de ti bud"
  ]
}

> {%

  // Assert status code
  client.test('When sending a word for translation, we expect to get json back', () => {
    client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.Translations[0]["Language"] === "ru");
    client.assert(response.body.Translations[0]["TranslationVariants"].length > 0);
    client.assert(response.body.Translations[1]["Language"] === "en");
    client.assert(response.body.Translations[1]["TranslationVariants"].length > 0);
  });
%}


### Meaning is null, but Word is not

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "SourceLanguage": "da",
  "DestinationLanguages": [
    "ru",
    "en"
  ],
  "Word": "såsom",
  "Meaning": "",
  "PartOfSpeech": "konjunktion"
}

> {%

  // Assert status code
  client.test('When Meaning is null, but Word is not, we expect to get json back', () => {
    client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.Translations[0]["Language"] === "ru");
    client.assert(response.body.Translations[0]["TranslationVariants"].length > 0);
    client.assert(response.body.Translations[1]["Language"] === "en");
    client.assert(response.body.Translations[1]["TranslationVariants"].length > 0);
  });
%}


### Word is null, but Meaning is not

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "SourceLanguage": "da",
  "DestinationLanguages": [
    "ru",
    "en"
  ],
  "Word": "",
  "Meaning": "gribe om noget med hånden eller med et redskab og flytte det",
  "PartOfSpeech": ""
}

> {%

  // Assert status code
  client.test('Word is null, but Meaning is not, we expect to get json back', () => {
    client.assert(response.status === 200, "Response status is 200");
    client.assert(response.body.Translations[0]["Language"] === "ru");
    client.assert(response.body.Translations[0]["TranslationVariants"].length > 0);
    client.assert(response.body.Translations[1]["Language"] === "en");
    client.assert(response.body.Translations[1]["TranslationVariants"].length > 0);
  });
%}



### BadRequest - SourceLanguage is null

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "Word": "såsom",
  "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
  "PartOfSpeech": "konjunktion",
  "SourceLanguage": "",
  "DestinationLanguages": [
    "en",
    "ru"
  ]
}

> {%

  // Assert status code
  client.test('When SourceLanguage is null, we expect to get an error', () => {
    client.assert(response.status === 400, "Response status is BadRequest");
    client.assert(response.body.Error === "Error: 'Source Language' must not be empty.");
  });
%}



### BadRequest - Word and Meaning are null

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "Word": "",
  "Meaning": "",
  "PartOfSpeech": "konjunktion",
  "SourceLanguage": "Danish",
  "DestinationLanguages": [
    "en",
    "ru"
  ]
}

> {%

  // Assert status code
  client.test('When both Word and Meaning are null, we expect to get an error', () => {
    client.assert(response.status === 400, "Response status is BadRequest");
    client.assert(response.body.Error === "Error: 'Word' or 'Meaning' must not be empty.");
  });
%}



### BadRequest - DestinationLanguages is null

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "Word": "såsom",
  "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
  "PartOfSpeech": "konjunktion",
  "SourceLanguage": "Danish",
  "DestinationLanguages": null
}

> {%

  // Assert status code
  client.test('When DestinationLanguages is null, we expect to get an error', () => {
    client.assert(response.status === 400, "Response status is BadRequest");
    client.assert(response.body.Error === "Error: 'DestinationLanguages' must have at least one element and fewer than two.");
  });
%}



### BadRequest - DestinationLanguages has too many elements

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "Word": "såsom",
  "Meaning": "bruges til angivelse af et eller flere eksempler på noget",
  "PartOfSpeech": "konjunktion",
  "SourceLanguage": "Danish",
  "DestinationLanguages": [
    "en",
    "ru",
    "es"
  ]
}

> {%

  // Assert status code
  client.test('When DestinationLanguages has too many elements, we expect to get an error', () => {
    client.assert(response.status === 400, "Response status is BadRequest");
    client.assert(response.body.Error === "Error: 'DestinationLanguages' must have at least one element and fewer than two.");
  });
%}


### BadRequest - Several required fields are null

POST {{HostAddress}}/api/Translate?code={{code}}&service={{service}}
Content-Type: application/json

{
  "HeadWord": null,
  "Meaning": null,
  "PartOfSpeech": null,
  "SourceLanguage": null,
  "DestinationLanguages": null
}

> {%

  // Assert status code
  client.test('When several required fields are null, we expect to get an error', () => {
    client.assert(response.status === 400, "Response status is BadRequest");
    client.assert(response.body.Error === "Error: 'Source Language' must not be empty, 'DestinationLanguages' must have at least one element and fewer than two, 'Word' or 'Meaning' must not be empty.");
  });
%}


### Test connection to Azure Translator Service

https://api.cognitive.microsofttranslator.com/languages?api-version=3.0

###
